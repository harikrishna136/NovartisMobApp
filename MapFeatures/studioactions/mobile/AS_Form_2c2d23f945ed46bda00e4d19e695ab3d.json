{
    "AS_Form_2c2d23f945ed46bda00e4d19e695ab3d": {
        "id": "AS_Form_2c2d23f945ed46bda00e4d19e695ab3d",
        "type": "ACTION_SEQUENCE",
        "actions": [{
            "id": "ADD_SNIPPET__890ea798184a4be2b85ae31840369cdb",
            "type": "ADD_SNIPPET",
            "codeSnippet": "kony.print(\"@@@@ in frmShowDirections preshow\");\n\nvar deviceInfo;\nskipDrawing = false;\nvar cnt = 0;\n\nsearchRoutesMine();\nfrmRouteSearch.mapRouteSearch.onClick = onRouteMapClick;\n\nfunction searchRoutesMine(){\n\t\n\tvar searchCriteria = {\n\t\torigin : {\"address\":\"Kukatpally\"},\n\t\tdestination : {\"address\":\"Gachibowli\"},\n\t\tdirectionServiceUrl : \"https://maps.googleapis.com/maps/api/directions/json\"\n\t};\n\n\t//if(pop1.cbalt.selectedKeys != null && pop1.cbalt.selectedKeys.length > 0)\n\t\tsearchCriteria.alternatives = true;\n\n\t//if(pop1.cbapikey.selectedKeys != null && pop1.cbapikey.selectedKeys.length > 0)\n\t\tsearchCriteria.apiKey = \"AIzaSyDzDds91h97mL-WvxKc6h6F-wx2P1tlTRo\";\n\n\t//if(pop1.tbmode.text != \"\")\n\t\t//searchCriteria.transportMode = pop1.tbmode.text; \n\t\n\tsearchCriteria.transportMode = \"driving\"; \n\t/*\t\n\tif(pop1.tbwaypoints.text!= null && pop1.tbwaypoints.text != \"\"){\n\t\tsearchCriteria.waypoints = [];\n\t\twaypoints = pop1.tbwaypoints.text.split(\",\");\n\t\tfor(var i=0;i<waypoints.length;++i)\n\t\t\tsearchCriteria.waypoints.push({\"address\":waypoints[i]});\n\t\t//searchCriteria.waypoints = [{\"address\":\"chandanagar\"},{\"address\":\"hafeezpet\"}];\n\t} \n\t\t\n\tif(pop1.tbavoid.text != null && pop1.tbavoid.text != \"\"){\n\t\tsearchCriteria.avoid = [];\n\t\ttoAvoid = pop1.tbavoid.text.split(\",\");\n\t\tfor(var i=0;i<toAvoid.length;++i)\n\t\t\tsearchCriteria.avoid.push(toAvoid[i]);\t\n\t}\n\t\t\n\tif(pop1.tblang.text != \"\")\n\t\tsearchCriteria.language = pop1.tblang.text; \n\t\t\n\tif(pop1.tbdptime.text != \"\")\n\t\tsearchCriteria.departureTime = pop1.tbdptime.text; \n\t\t\n\tif(pop1.tbarrtime.text != \"\")\n\t\tsearchCriteria.arrivalTime = pop1.tbarrtime.text; \n\t\t\n\tif(pop1.tbtsitmode.text != null && pop1.tbtsitmode.text != \"\"){\n\t\tsearchCriteria.transitMode = [];\n\t\tvar transitModes = pop1.tbtsitmode.text.split(\",\");\n\t\tfor(var i=0;i<transitModes.length;++i)\n\t\t\tsearchCriteria.transitMode.push(transitModes[i]);\t\n\t}\n\t\n\tif(pop1.tbtsitpref.text != null && pop1.tbtsitpref.text != \"\"){\n\t\tsearchCriteria.transitRoutingPreference = [];\n\t\tvar transitPrefs = pop1.tbtsitpref.text.split(\",\");\n\t\tfor(var i=0;transitPrefs.length;++i)\n\t\t\tsearchCriteria.transitRoutingPreference.push(transitPrefs[i]);\t\n\t}\n\t*/\n\t\n\tkony.map.searchRoutes(searchCriteria,mapRouteSearchSuccessCallback,mapRouteSearchErrorCallback);\n\treturn searchCriteria;\n\t//kony.application.showLoadingScreen(null,\"Fetching routes...\",constants.LOADING_SCREEN_POSITION_ONLY_CENTER, false,true,{enableMenuKey:true,enableBackKey:false});\n}\n\n\nfunction searchRoutesRepeat(){\n\tvar cnt = parseInt(pop1.tbrcnt.text);\n\tfor(var i=0;i<cnt;i++){\n\t\tsearchRoutes();\n\t}\n}\n\nfunction routeSuccessCallback(routes){\n\tkony.print(\"********** Search Routes Success : \"+(++cnt));\n}\n\nfunction routeErrorCallback(code,emsg){\n\tkony.print(\"Search Route Error for - \"+(++cnt)+\" error - \"+emsg);\n}\n\nfunction timerCallback(){\n\tkony.map.searchRoutes(mySearchCriteria,routeSuccessCallback,routeErrorCallback);\n}\n\nfunction searchRoutesInTimer(){\n\tmySearchCriteria = searchRoutes();\n\tkony.timer.schedule(\"timer1\", timerCallback, 1, true);\n}\nvar mainRoute = -1;\nvar resultRoutes ;\nvar routeColors = [\"0000FF77\",\"FF00FF77\",\"FF000077\",\"FFFF0077\",\"0x00000077\"];\nvar mainRouteColor = \"0000FFFF\";\n\nfunction mapRouteSearchSuccessCallback(routes){\n\tkony.print(\"@@@@ the routes from mapRouteSearchSuccessCallback are \" + routes);\n\t//displySearchRoutes(routes);\n  \tresultRoutes = routes;\n\tkony.application.dismissLoadingScreen();\n\t/*\n\tif(pop1.cbskdr.selectedKeys != null && pop1.cbskdr.selectedKeys.length > 0)\n\t{\n\t\tkony.print(\"******* Route Search Success-\"+(++i));\n\t\treturn;\n\t}\n\t*/\n\tkony.print(routes);\n\tfrmRouteSearch.mapRouteSearch.clear();\n\tif(routes == null || routes.length == 0)\n\t{\n\t\talert(\"No Routes Found\");\n\t\treturn;\n\t}\n\n\tvar routeWidth = [10,5,5,5];\n\tfor(var i=0;i<routes.length;++i){\n\t\tif(i == 0)\n\t\t\tdrawRoute(\"route\"+i, routes[i],mainRouteColor,routeWidth[i]);\n\t\telse\n\t\t drawRoute(\"route\"+i, routes[i],routeColors[i],routeWidth[i]);\n\t}\n}\n\nfunction drawRoute(routeid,route,color,width){\n\t\n\t//var steps = getPathPoints(route);\n\t//kony.print(\"@@@@ the steps from getPathPoints are \" + steps);\n\t\n\tvar steps = getPathPointsFromRoute(route);\n\tkony.print(\"@@@@ the steps from getPathPointsFromRoute are \" + steps);\n\t\n\tei = steps.length-1;\n\tvar startLo = {lat:steps[0].lat,lon:steps[0].lon,image:{source:\"skony.png\",anchor:kony.map.PIN_IMG_ANCHOR_CENTER}};\n\tvar endLoc = {lat:steps[ei].lat,lon:steps[ei].lon,image:{source:\"skony.png\",anchor:kony.map.PIN_IMG_ANCHOR_CENTER}};\n\t//alert(\"No of Steps:\"+steps.length);\n\tvar polylineData = {\n\t\tid : routeid,\n\t\tlocations : steps,\n\t\tstartLocation : startLo,\n\t\tendLocation : endLoc,\n\t\tpolylineConfig : {\n\t\t\tlineWidth : width,\n\t\t\tlineColor : color\n\t\t}\n\t}\n\t\n\tfrmRouteSearch.mapRouteSearch.addPolyline(polylineData);\n}\n\nfunction onRouteMapClick(map, loc){\n  \tkony.print(\"@@@@ the onRouteMapClick function called\");\n\tvar selRoute = -1;\n\tfor(var i=0;i<resultRoutes.length;i++){\n\t\tvar shapeData = {\"locations\":resultRoutes[i].polylinePoints,tolerance:500};\n\t\tvar result = kony.map.containsLocation(kony.map.SHAPE_TYPE_POLYLINE,loc,shapeData);\n\t\tif(result == true){\n\t\t\tselRoute = i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tkony.print(\"******** Selected Route No = \"+selRoute);\n\tif(selRoute != -1 && mainRoute != selRoute){\n\t\tmainRoute = selRoute;\n\t\tfor(var j=0;j<resultRoutes.length;++j){\n\t\t\t\tif(j == selRoute)\n\t\t\t\t\tdrawRoute(\"route\"+j, resultRoutes[j],mainRouteColor,10);\n\t\t\t\telse\n\t\t\t\t \tdrawRoute(\"route\"+j, resultRoutes[j],routeColors[j],5);\n\t\t}\n\t}\n}\n\nfunction mapRouteSearchErrorCallback(code,emsg){\n\tkony.application.dismissLoadingScreen();\n\talert(\"Error=\"+emsg);\n}\n\nfunction getPathPointsFromRoute(route){\n\tkony.print(\"@@@@ the route from getPathPointsFromRoute are \" + route);\n\treturn route.polylinePoints;\n}\n\nfunction getPathPoints(route){\n\tkony.print(\"@@@@ the route from getPathPoints are \" + route);\n\tvar pathPoints = new Array();\n\tfor(var i=0;i<route.legs[0].steps.length;i++){\n\t\tvar step = route.legs[0].steps[i];\n\t\tfor(var j=0;j<step.points.length;j++)\n\t\tpathPoints.push(step.points[j]);\n\t}\n\t\n\treturn pathPoints;\n}\n",
            "parentId": null,
            "callbackType": null
        }]
    }
}